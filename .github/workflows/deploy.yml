name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NODE_OPTIONS: --max_old_space_size=4096
      # Expose GitHub token (fine-grained, repo:contents:write) to the build so
      # the client bundle can read process.env.NEXT_PUBLIC_GITHUB_TOKEN.
      # Define this secret in: Settings → Secrets and variables → Actions
      NEXT_PUBLIC_GITHUB_TOKEN: ${{ secrets.NEXT_PUBLIC_GITHUB_TOKEN }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build

    - name: Write runtime env for client fallback
      run: |
        cat > public/runtime-env.json <<EOF
        {"NEXT_PUBLIC_GITHUB_TOKEN":"${{ secrets.NEXT_PUBLIC_GITHUB_TOKEN }}"}
        EOF

    - name: Generate sitemap and RSS
      run: |
        npm run generate-sitemap
        npm run generate-rss

    - name: Verify build output
      run: |
        test -d out && echo "out directory exists" || (echo "out directory missing" && exit 1)
        ls -la out | head -100 | cat
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
